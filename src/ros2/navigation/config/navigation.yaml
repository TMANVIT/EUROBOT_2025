amcl:
  ros__parameters:
    use_sim_time: false
    tf_broadcast: false

amcl_map_client:
  ros__parameters:
    use_sim_time: False

amcl_rclcpp_node:
  ros__parameters:
    use_sim_time: False

bt_navigator:
  ros__parameters:
    use_sim_time: false
    global_frame: map
    robot_base_frame: base_footprint
    odom_topic: /odom
    # default_bt_xml_filename: "config/bt/behavior_tree.xml" ## Хз, какая-то херня
    bt_loop_duration: 50
    default_server_timeout: 50
    enable_groot_monitoring: false
    groot_zmq_publisher_port: 1666
    groot_zmq_server_port: 1667
    plugin_lib_names:
    - nav2_compute_path_to_pose_action_bt_node
    - nav2_compute_path_through_poses_action_bt_node
    - nav2_follow_path_action_bt_node
    - nav2_back_up_action_bt_node
    - nav2_spin_action_bt_node
    - nav2_wait_action_bt_node
    - nav2_clear_costmap_service_bt_node
    - nav2_is_stuck_condition_bt_node
    - nav2_goal_reached_condition_bt_node
    - nav2_goal_updated_condition_bt_node
    - nav2_initial_pose_received_condition_bt_node
    - nav2_reinitialize_global_localization_service_bt_node
    - nav2_rate_controller_bt_node
    - nav2_distance_controller_bt_node
    - nav2_speed_controller_bt_node
    - nav2_truncate_path_action_bt_node
    - nav2_goal_updater_node_bt_node
    - nav2_recovery_node_bt_node
    - nav2_pipeline_sequence_bt_node
    - nav2_round_robin_node_bt_node
    - nav2_transform_available_condition_bt_node
    - nav2_time_expired_condition_bt_node
    - nav2_distance_traveled_condition_bt_node
    - nav2_single_trigger_bt_node
    - nav2_navigate_through_poses_action_bt_node
    - nav2_navigate_to_pose_action_bt_node
    - nav2_remove_passed_goals_action_bt_node
    - nav2_planner_selector_bt_node
    - nav2_controller_selector_bt_node
    - nav2_goal_checker_selector_bt_node

bt_navigator_rclcpp_node:
  ros__parameters:
    use_sim_time: false

controller_server:
  ros__parameters:
    use_sim_time: false
    controller_frequency: 20.0
    min_x_velocity_threshold: 0.001
    min_y_velocity_threshold: 0.0
    min_theta_velocity_threshold: 0.1
    failure_tolerance: 0.3
    progress_checker_plugin: "progress_checker"
    goal_checker_plugins: ["general_goal_checker"] # "precise_goal_checker"
    controller_plugins: ["FollowPath"]

    # Progress checker parameters
    progress_checker:
      plugin: "nav2_controller::SimpleProgressChecker"
      required_movement_radius: 0.5
      movement_time_allowance: 15.0

    # Goal checker parameters
    general_goal_checker:
      stateful: true
      plugin: "nav2_controller::SimpleGoalChecker"
      xy_goal_tolerance: 0.02
      yaw_goal_tolerance: 0.03

    FollowPath:
      plugin: "dwb_core::DWBLocalPlanner"
      odom_topic: "odom"
      base_frame: "base_footprint"
      global_frame: "map"
      footprint: "[[0.25, 0.10], [0.1, 0.25], [-0.085, 0.25], [-0.085, -0.25], [0.1, -0.25], [0.25, -0.10]]"
      min_obstacle_dist: 0.30
      debug_trajectory_details: True
      min_vel_x: 0.0
      min_vel_y: 0.0
      max_vel_x: 0.11
      max_vel_y: 0.0
      max_vel_theta: 0.85
      min_speed_xy: 0.0
      max_speed_xy: 0.01
      min_speed_theta: 0.0
      acc_lim_x: 1.5
      acc_lim_y: 0.0
      acc_lim_theta: 10.5
      decel_lim_x: -1.5
      decel_lim_y: 0.0
      decel_lim_theta: -10.5
      vx_samples: 30
      vy_samples: 0
      vtheta_samples: 60
      sim_time: 1.5
      linear_granularity: 0.05
      angular_granularity: 0.025
      transform_tolerance: 0.2
      xy_goal_tolerance: 0.01
      trans_stopped_velocity: 0.05
      stateful: True
      allow_reversing: true
      critics: ["RotateToGoal", "Oscillation", "BaseObstacle", "GoalAlign", "PathAlign", "PathDist", "GoalDist", "ObstacleFootprint", "Oscillation", "PreferForward"]
      BaseObstacle.scale: 0.02
      PathAlign.scale: 32.0
      GoalAlign.scale: 24.0
      PathAlign.forward_point_distance: 0.1
      GoalAlign.forward_point_distance: 0.1
      PathDist.scale: 20.0
      GoalDist.scale: 15.0
      RotateToGoal.scale: 50.0
      RotateToGoal.slowing_factor: 20.0
      RotateToGoal.lookahead_time: -1.0
      ObstacleFootprint.sum_scores: false
      Oscillation.scale: 10.0
      PreferForward.scale: 1.5
      PreferForward.theta_scale: 2.0

controller_server_rclcpp_node:
  ros__parameters:
    use_sim_time: false

global_costmap:
  global_costmap:
    ros__parameters:
      use_sim_time: false
      footprint_padding: 0.03
      update_frequency: 30.0
      publish_frequency: 1.0
      global_frame: map
      robot_base_frame: base_footprint
      footprint: "[[0.25, 0.10], [0.1, 0.25], [-0.085, 0.25], [-0.085, -0.25], [0.1, -0.25], [0.25, -0.10]]"
      resolution: 0.05
      plugins: ["static_layer", "inflation_layer"]
      static_layer:
        plugin: "nav2_costmap_2d::StaticLayer"
        map_topic: "/dynamic_map"
        enabled: true
        subscribe_to_updates: false
        transform_tolerance: 0.1
        use_maximum: false 
      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        enabled: true
        inflation_radius: 1.5
        cost_scaling_factor: 0.5
        inflate_unknown: false
        inflate_around_unknown: false
      always_send_full_costmap: true

local_costmap:
  ros__parameters:
    use_sim_time: false
    update_frequency: 30.0
    publish_frequency: 1.0
    global_frame: odom
    robot_base_frame: base_footprint
    rolling_window: true
    width: 0.5
    height: 0.5
    resolution: 0.05
    footprint: "[[0.20, 0.10], [0.1, 0.2], [-0.085, 0.20], [-0.085, -0.20], [0.1, -0.2], [0.20, -0.10]]"
    plugins: ["inflation_layer"]
    inflation_layer:
      plugin: "nav2_costmap_2d::InflationLayer"
      enabled: true
      inflation_radius: 0.3
      cost_scaling_factor: 0.5
      inflate_unknown: false
      inflate_around_unknown: true                 

map_server:
  ros__parameters:
    use_sim_time: false
    yaml_filename: "battlefield.yaml" # As default. Set up in launch file
    save_map_timeout: 5.0
    free_thresh_default: 0.25
    occupied_thresh_default: 0.85
    map_subscribe_transient_local: true

planner_server:
  ros__parameters:
    expected_planner_frequency: 30.0
    use_sim_time: false
    planner_plugins: ["GridBased"]
    GridBased:
      plugin: "nav2_navfn_planner/NavfnPlanner"
      tolerance: 0.01
      use_astar: true
      allow_unknown: false
      use_final_approach_orientation: true 

### Нужно сделать

# behavior_server:
#   ros__parameters:
#     costmap_topic: global_costmap/costmap_raw
#     footprint_topic: global_costmap/published_footprint
#     cycle_frequency: 30.0
#     behavior_plugins: ["spin", "backup", "wait"]
#     spin:
#       plugin: "nav2_behaviors/Spin" # In Iron and older versions, "/" was used instead of "::"
#       spin_dist: 0.57
#       cmd_vel: 0.5
#       time_allowance: 5.0
#     backup:
#       plugin: "nav2_behaviors/BackUp" # In Iron and older versions, "/" was used instead of "::"
#       distance: 0.2
#       speed: 0.1
#       time_allowance: 5.0
#     wait:
#       plugin: "nav2_behaviors/Wait" # In Iron and older versions, "/" was used instead of "::"
#       wait_duration: 0.5
#     local_frame: odom
#     global_frame: map
#     robot_base_frame: base_footprint
#     transform_timeout: 0.1
#     simulate_ahead_time: 2.0
#     max_rotational_vel: 1.0
#     min_rotational_vel: 0.4
#     rotational_acc_lim: 3.2
#     enable_stamped_cmd_vel: true  # default false in Jazzy or older
