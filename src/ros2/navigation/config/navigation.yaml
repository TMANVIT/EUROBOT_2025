amcl:
  ros__parameters:
    use_sim_time: false
    tf_broadcast: false

amcl_map_client:
  ros__parameters:
    use_sim_time: false

amcl_rclcpp_node:
  ros__parameters:
    use_sim_time: false

bt_navigator:
  ros__parameters:
    use_sim_time: false
    global_frame: map
    robot_base_frame: base_footprint
    odom_topic: /odom
    default_bt_xml_filename: "config/bt/behavior_tree.xml" ## Хз, какая-то херня
    bt_loop_duration: 50
    default_server_timeout: 50
    enable_groot_monitoring: false
    groot_zmq_publisher_port: 1666
    groot_zmq_server_port: 1667
    plugin_lib_names:
    - nav2_compute_path_to_pose_action_bt_node
    - nav2_compute_path_through_poses_action_bt_node
    - nav2_follow_path_action_bt_node
    - nav2_back_up_action_bt_node
    - nav2_spin_action_bt_node
    - nav2_wait_action_bt_node
    - nav2_clear_costmap_service_bt_node
    - nav2_is_stuck_condition_bt_node
    - nav2_goal_reached_condition_bt_node
    - nav2_goal_updated_condition_bt_node
    - nav2_initial_pose_received_condition_bt_node
    - nav2_reinitialize_global_localization_service_bt_node
    - nav2_rate_controller_bt_node
    - nav2_distance_controller_bt_node
    - nav2_speed_controller_bt_node
    - nav2_truncate_path_action_bt_node
    - nav2_goal_updater_node_bt_node
    - nav2_recovery_node_bt_node
    - nav2_pipeline_sequence_bt_node
    - nav2_round_robin_node_bt_node
    - nav2_transform_available_condition_bt_node
    - nav2_time_expired_condition_bt_node
    - nav2_distance_traveled_condition_bt_node
    - nav2_single_trigger_bt_node
    - nav2_is_battery_low_condition_bt_node
    - nav2_navigate_through_poses_action_bt_node
    - nav2_navigate_to_pose_action_bt_node
    - nav2_remove_passed_goals_action_bt_node
    - nav2_planner_selector_bt_node
    - nav2_controller_selector_bt_node
    - nav2_goal_checker_selector_bt_node

bt_navigator_rclcpp_node:
  ros__parameters:
    use_sim_time: false

controller_server:
  ros__parameters:
    use_sim_time: false
    controller_frequency: 20.0
    min_x_velocity_threshold: 0.001
    min_y_velocity_threshold: 0.0
    min_theta_velocity_threshold: 0.1
    failure_tolerance: 0.3
    progress_checker_plugin: "progress_checker"
    goal_checker_plugins: ["general_goal_checker"] # "precise_goal_checker"
    controller_plugins: ["FollowPath"]

    # Progress checker parameters
    progress_checker:
      plugin: "nav2_controller::SimpleProgressChecker"
      required_movement_radius: 0.5
      movement_time_allowance: 15.0

    # Goal checker parameters
    general_goal_checker:
      stateful: true
      plugin: "nav2_controller::SimpleGoalChecker"
      xy_goal_tolerance: 0.02
      yaw_goal_tolerance: 0.03

    # MPPI Controller
    FollowPath:
      plugin: "nav2_mppi_controller::MPPIController"
      motion_model: "DiffDrive"
      iteration_count: 1
      batch_size: 1000
      time_steps: 56
      model_dt: 0.05
      vx_std: 0.1
      wz_std: 0.4
      vx_max: 0.15
      vx_min: -0.15
      wz_max: 0.85
      ax_max: 2.0
      ax_min: -2.0
      az_max: 2.5
      temperature: 0.3
      gamma: 0.015
      visualize: false
      retry_attempt_limit: 3
      reset_period: 0.1
      regenerate_noises: false
      obstacle_cost_weight: 1000.0      # Штраф за препятствия
      inflation_cost_scaling_factor: 5.0
      prune_distance: 0.5            # Дистанция до цели для остановки
      transform_tolerance: 0.1
      enforce_path_inversion: false
      inversion_yaw_tolerance: 0.4
      inversion_xy_tolerance: 0.2
      critics: ["ConstraintCritic", "CostCritic", "GoalCritic", "GoalAngleCritic", "PathAlignCritic", "PathFollowCritic", "PathAngleCritic", "PreferForwardCritic"]
      ConstraintCritic:
        enabled: true
        cost_power: 1
        cost_weight: 4.0
      GoalCritic:
        enabled: true
        cost_power: 1
        cost_weight: 5.0
        threshold_to_consider: 0.1
      GoalAngleCritic:
        enabled: true
        cost_power: 1
        cost_weight: 3.0
        threshold_to_consider: 0.5
      PreferForwardCritic:
        enabled: true
        cost_power: 1
        cost_weight: 5.0
        threshold_to_consider: 0.5
      ObstaclesCritic:
        enabled: true
        cost_power: 1
        repulsion_weight: 1.5
        critical_weight: 20.0
        consider_footprint: false
        collision_cost: 10000.0
        collision_margin_distance: 0.1
        near_goal_distance: 0.5
        inflation_radius: 0.15 # (only in Humble)
        cost_scaling_factor: 10.0 # (only in Humble)
      CostCritic:
        enabled: true
        cost_power: 1
        cost_weight: 3.81
        critical_cost: 300.0
        consider_footprint: true
        collision_cost: 1000000.0
        near_goal_distance: 1.0
        trajectory_point_step: 2
      PathAlignCritic:
        enabled: true
        cost_power: 1
        cost_weight: 14.0
        max_path_occupancy_ratio: 0.05
        trajectory_point_step: 4
        threshold_to_consider: 0.05
        offset_from_furthest: 20
        use_path_orientations: false
      PathFollowCritic:
        enabled: true
        cost_power: 1
        cost_weight: 5.0
        offset_from_furthest: 5
        threshold_to_consider: 0.05
      PathAngleCritic:
        enabled: true
        cost_power: 1
        cost_weight: 2.0
        offset_from_furthest: 4
        threshold_to_consider: 0.05
        max_angle_to_furthest: 0.4
        mode: 1
      
      ### Второй вариант планнера. Пока нормально не отдебажен


      # plugin: "nav2_regulated_pure_pursuit_controller::RegulatedPurePursuitController"
      # desired_linear_vel: 0.15
      # lookahead_dist: 0.6
      # min_lookahead_dist: 0.3
      # max_lookahead_dist: 0.9
      # lookahead_time: 1.5
      # rotate_to_heading_angular_vel: 0.85
      # transform_tolerance: 0.1
      # use_velocity_scaled_lookahead_dist: false
      # min_approach_linear_velocity: 0.05
      # approach_velocity_scaling_dist: 0.6
      # use_collision_detection: true
      # max_allowed_time_to_collision_up_to_carrot: 1.0
      # use_regulated_linear_velocity_scaling: true
      # use_fixed_curvature_lookahead: false
      # curvature_lookahead_dist: 0.25
      # use_cost_regulated_linear_velocity_scaling: false
      # regulated_linear_scaling_min_radius: 0.9
      # regulated_linear_scaling_min_speed: 0.25
      # use_rotate_to_heading: true
      # allow_reversing: false
      # rotate_to_heading_min_angle: 0.785
      # max_angular_accel: 3.2
      
controller_server_rclcpp_node:
  ros__parameters:
    use_sim_time: false

global_costmap:
  global_costmap:
    ros__parameters:
      use_sim_time: false
      footprint_padding: 0.03
      update_frequency: 30.0
      publish_frequency: 1.0
      global_frame: map
      robot_base_frame: base_footprint
      footprint: "[[0.2, 0.20], [-0.086, 0.20], [-0.086, -0.20], [0.2, -0.20]]"
      resolution: 0.05
      plugins: ["static_layer", "inflation_layer"]
      static_layer:
        plugin: "nav2_costmap_2d::StaticLayer"
        map_subscribe_transient_local: true
        enabled: true
        subscribe_to_updates: true
        transform_tolerance: 0.1
      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        enabled: true
        inflation_radius: 0.12
        cost_scaling_factor: 1.0
        inflate_unknown: false
        inflate_around_unknown: false
      always_send_full_costmap: true

local_costmap:
  ros__parameters:
    use_sim_time: false
    update_frequency: 30.0
    publish_frequency: 1.0
    global_frame: odom
    robot_base_frame: base_footprint
    rolling_window: true
    width: 0.5
    height: 0.5
    resolution: 0.05
    footprint: "[[0.1, 0.20], [-0.086, 0.20], [-0.086, -0.20], [0.1, -0.20]]"
    plugins: ["inflation_layer"]
    inflation_layer:
      plugin: "nav2_costmap_2d::InflationLayer"
      enabled: true
      inflation_radius: 0.005
      cost_scaling_factor: 4.0
      inflate_unknown: false
      inflate_around_unknown: true                 

map_server:
  ros__parameters:
    use_sim_time: false
    yaml_filename: "battlefield.yaml" # As default. Set up in launch file
    save_map_timeout: 5.0
    free_thresh_default: 0.25
    occupied_thresh_default: 0.85
    map_subscribe_transient_local: true

### Перейти на SMAC

# planner_server:
#   ros__parameters:
#     expected_planner_frequency: 30.0
#     use_sim_time: false
#     planner_plugins: ["GridBased"]
#     GridBased:
#       plugin: "nav2_navfn_planner/NavfnPlanner"
#       tolerance: 0.05
#       use_astar: true
#       allow_unknown: false
#       use_final_approach_orientation: true 

# planner_server_rclcpp_node:
#   ros__parameters:
#     use_sim_time: false

### Нужно сделать

# behavior_server:
#   ros__parameters:
#     costmap_topic: global_costmap/costmap_raw
#     footprint_topic: global_costmap/published_footprint
#     cycle_frequency: 30.0
#     behavior_plugins: ["spin", "backup", "wait"]
#     spin:
#       plugin: "nav2_behaviors/Spin" # In Iron and older versions, "/" was used instead of "::"
#       spin_dist: 0.57
#       cmd_vel: 0.5
#       time_allowance: 5.0
#     backup:
#       plugin: "nav2_behaviors/BackUp" # In Iron and older versions, "/" was used instead of "::"
#       distance: 0.2
#       speed: 0.1
#       time_allowance: 5.0
#     wait:
#       plugin: "nav2_behaviors/Wait" # In Iron and older versions, "/" was used instead of "::"
#       wait_duration: 0.5
#     local_frame: odom
#     global_frame: map
#     robot_base_frame: base_footprint
#     transform_timeout: 0.1
#     simulate_ahead_time: 2.0
#     max_rotational_vel: 1.0
#     min_rotational_vel: 0.4
#     rotational_acc_lim: 3.2
#     enable_stamped_cmd_vel: true  # default false in Jazzy or older