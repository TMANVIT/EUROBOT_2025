amcl:
  ros__parameters:
    use_sim_time: false
    alpha1: 0.02
    alpha2: 0.02
    alpha3: 0.02
    alpha4: 0.02
    alpha5: 0.02
    base_frame_id: "base_footprint"
    beam_skip_distance: 0.5
    beam_skip_error_threshold: 0.9
    beam_skip_threshold: 0.3
    do_beamskip: true
    global_frame_id: "map"
    lambda_short: 0.1
    laser_likelihood_max_dist: 2.0
    laser_max_range: 5.0
    laser_min_range: 0.15
    laser_model_type: "likelihood_field"
    max_beams: 60
    max_particles: 15000
    min_particles: 13000
    odom_frame_id: "odom"
    pf_err: 0.05
    pf_z: 0.99
    recovery_alpha_fast: 0.02
    recovery_alpha_slow: 0.02
    resample_interval: 1
    robot_model_type: "nav2_amcl::DifferentialMotionModel"
    save_pose_rate: 0.5
    sigma_hit: 0.15
    tf_broadcast: false
    transform_tolerance: 1.0
    update_min_a: 0.2
    update_min_d: 0.25
    z_hit: 0.8
    z_max: 0.05
    z_rand: 0.2
    z_short: 0.05
    scan_topic: scan

amcl_map_client:
  ros__parameters:
    use_sim_time: false

amcl_rclcpp_node:
  ros__parameters:
    use_sim_time: false

# bt_navigator:
#   ros__parameters:
#     use_sim_time: false
#     global_frame: map
#     robot_base_frame: base_footprint
#     odom_topic: /odom
#     bt_loop_duration: 50
#     default_server_timeout: 50
#     enable_groot_monitoring: true
#     groot_zmq_publisher_port: 1666
#     groot_zmq_server_port: 1667
#     plugin_lib_names:
#     - nav2_compute_path_to_pose_action_bt_node
#     - nav2_compute_path_through_poses_action_bt_node
#     - nav2_follow_path_action_bt_node
#     - nav2_back_up_action_bt_node
#     - nav2_spin_action_bt_node
#     - nav2_wait_action_bt_node
#     - nav2_clear_costmap_service_bt_node
#     - nav2_is_stuck_condition_bt_node
#     - nav2_goal_reached_condition_bt_node
#     - nav2_goal_updated_condition_bt_node
#     - nav2_initial_pose_received_condition_bt_node
#     - nav2_reinitialize_global_localization_service_bt_node
#     - nav2_rate_controller_bt_node
#     - nav2_distance_controller_bt_node
#     - nav2_speed_controller_bt_node
#     - nav2_truncate_path_action_bt_node
#     - nav2_goal_updater_node_bt_node
#     - nav2_recovery_node_bt_node
#     - nav2_pipeline_sequence_bt_node
#     - nav2_round_robin_node_bt_node
#     - nav2_transform_available_condition_bt_node
#     - nav2_time_expired_condition_bt_node
#     - nav2_distance_traveled_condition_bt_node
#     - nav2_single_trigger_bt_node
#     - nav2_is_battery_low_condition_bt_node
#     - nav2_navigate_through_poses_action_bt_node
#     - nav2_navigate_to_pose_action_bt_node
#     - nav2_remove_passed_goals_action_bt_node
#     - nav2_planner_selector_bt_node
#     - nav2_controller_selector_bt_node
#     - nav2_goal_checker_selector_bt_node

bt_navigator_rclcpp_node:
  ros__parameters:
    use_sim_time: false

controller_server:
  ros__parameters:
    use_sim_time: false
    controller_frequency: 5.0
    min_x_velocity_threshold: 0.05
    min_y_velocity_threshold: 0.1
    min_theta_velocity_threshold: 0.1
    failure_tolerance: 0.3
    progress_checker_plugin: "progress_checker"
    goal_checker_plugins: ["general_goal_checker"] # "precise_goal_checker"
    controller_plugins: ["FollowPath"]

    # Progress checker parameters
    progress_checker:
      plugin: "nav2_controller::SimpleProgressChecker"
      required_movement_radius: 0.3
      movement_time_allowance: 15.0

    # Goal checker parameters
    general_goal_checker:
      stateful: true
      plugin: "nav2_controller::SimpleGoalChecker"
      xy_goal_tolerance: 0.02
      yaw_goal_tolerance: 0.03
    # DWB parameters
    FollowPath:
      plugin: "dwb_core::DWBLocalPlanner"
      debug_trajectory_details: true
      min_vel_x: 0.0
      min_vel_y: 0.0
      max_vel_x: 0.4
      max_vel_y: 0.0
      max_vel_theta: 1.0
      min_speed_xy: 0.0
      max_speed_xy: 0.15
      min_speed_theta: 0.0
      max_speed_theta: 0.85
      # Add high threshold velocity for turtlebot 3 issue.
      # https://github.com/ROBOTIS-GIT/turtlebot3_simulations/issues/75
      acc_lim_x: 0.3
      acc_lim_y: 0.0
      acc_lim_theta: 1.0
      decel_lim_x: -2.5
      decel_lim_y: 0.0
      decel_lim_theta: -3.2
      vx_samples: 30
      vy_samples: 1
      vtheta_samples: 40
      sim_time: 1.5
      linear_granularity: 0.05
      angular_granularity: 0.025
      transform_tolerance: 0.2
      xy_goal_tolerance: 0.1
      trans_stopped_velocity: 0.17
      short_circuit_trajectory_evaluation: true
      stateful: true
      critics: ["RotateToGoal", "Oscillation", "BaseObstacle", "GoalAlign", "PathAlign", "PathDist", "GoalDist"]
      BaseObstacle.scale: 0.75
      PathAlign.scale: 50.0
      PathAlign.forward_point_distance: 0.1
      GoalAlign.scale: 50.0
      GoalAlign.forward_point_distance: 0.1
      PathDist.scale: 45.0
      GoalDist.scale: 45.0
      RotateToGoal.scale: 50.0
      RotateToGoal.slowing_factor: 10.0
      RotateToGoal.lookahead_time: -1.0
      # PreciseGoal:
      #   plugin: "dwb_critics::PreciseGoalCritic"
      #   xy_goal_tolerance: 0.02
      #   yaw_goal_tolerance: 0.05
      #   scale: 50.0
      
controller_server_rclcpp_node:
  ros__parameters:
    use_sim_time: false

global_costmap:
  global_costmap:
    ros__parameters:
      use_sim_time: false
      footprint_padding: 0.03
      update_frequency: 30.0
      publish_frequency: 1.0
      global_frame: map
      robot_base_frame: base_footprint
      footprint: "[[0.2, 0.20], [-0.086, 0.20], [-0.086, -0.20], [0.2, -0.20]]"
      resolution: 0.05
      plugins: ["static_layer", "inflation_layer"]
      static_layer:
        plugin: "nav2_costmap_2d::StaticLayer"
        map_subscribe_transient_local: true
        enabled: true
        subscribe_to_updates: true
        transform_tolerance: 0.1
      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        enabled: true
        inflation_radius: 0.05
        cost_scaling_factor: 4.5
        inflate_unknown: false
        inflate_around_unknown: false
      always_send_full_costmap: true

# local_costmap:
  local_costmap:
    ros__parameters:
      use_sim_time: false
      update_frequency: 30.0
      publish_frequency: 1.0
      global_frame: odom
      robot_base_frame: base_footprint
      rolling_window: true
      width: 0.5
      height: 0.5
      resolution: 0.5
      footprint: "[[0.1, 0.20], [-0.086, 0.20], [-0.086, -0.20], [0.1, -0.20]]"
      plugins: ["inflation_layer"]
      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        enabled: true
        inflation_radius: 0.005
        cost_scaling_factor: 4.0
        inflate_unknown: false
        inflate_around_unknown: true                 

map_server:
  ros__parameters:
    use_sim_time: false
    yaml_filename: "battlefield.yaml" # As default. Set up in launch file
    save_map_timeout: 5.0
    free_thresh_default: 0.25
    occupied_thresh_default: 0.85
    map_subscribe_transient_local: true

planner_server:
  ros__parameters:
    expected_planner_frequency: 20.0
    use_sim_time: false
    planner_plugins: ["GridBased"]
    GridBased:
      plugin: "nav2_navfn_planner/NavfnPlanner"
      tolerance: 0.05
      use_astar: true
      allow_unknown: false
      use_final_approach_orientation: true 

planner_server_rclcpp_node:
  ros__parameters:
    use_sim_time: false

# behavior_server:
#   ros__parameters:
#     costmap_topic: global_costmap/costmap_raw
#     footprint_topic: global_costmap/published_footprint
#     cycle_frequency: 30.0
#     behavior_plugins: ["spin", "backup", "wait"]
#     spin:
#       plugin: "nav2_behaviors/Spin" # In Iron and older versions, "/" was used instead of "::"
#       spin_dist: 0.57
#       cmd_vel: 0.5
#       time_allowance: 5.0
#     backup:
#       plugin: "nav2_behaviors/BackUp" # In Iron and older versions, "/" was used instead of "::"
#       distance: 0.2
#       speed: 0.1
#       time_allowance: 5.0
#     wait:
#       plugin: "nav2_behaviors/Wait" # In Iron and older versions, "/" was used instead of "::"
#       wait_duration: 0.5
#     local_frame: odom
#     global_frame: map
#     robot_base_frame: base_footprint
#     transform_timeout: 0.1
#     simulate_ahead_time: 2.0
#     max_rotational_vel: 1.0
#     min_rotational_vel: 0.4
#     rotational_acc_lim: 3.2
#     enable_stamped_cmd_vel: true  # default false in Jazzy or older

# waypoint_follower:
#   ros__parameters:
#     loop_rate: 20
#     stop_on_failure: false
#     waypoint_task_executor_plugin: "wait_at_waypoint"   
#     wait_at_waypoint:
#       plugin: "nav2_waypoint_follower::WaitAtWaypoint"
#       enabled: true
#       waypoint_pause_duration: 20043


# velocity_smoother:
#   ros__parameters:
#     smoothing_frequency: 30.0
#     scale_velocities: False
#     feedback: "OPEN_LOOP"
#     max_velocity: [0.15, 0.0, 0.85]
#     min_velocity: [-0.15, 0.0, 0.85]
#     max_accel: [1.0, 0.0, 0.5]
#     max_decel: [-1.0, 0.0, -0.5]
#     odom_topic: "odom"
#     odom_duration: 0.1
#     deadband_velocity: [0.02, 0.02, 0.02]
#     velocity_timeout: 0.5